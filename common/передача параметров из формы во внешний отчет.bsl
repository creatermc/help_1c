
// ++ яя_Айтеко $ДОБ Н-00001236
&НаСервере
Функция ПолучитьСписокНаФорме()
	
	Схема = ЭтаФорма.Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = ЭтаФорма.Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();

    //Переводим динамический список в таблицу значений
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);

    ПроцессорВыводаРезультата = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
    Возврат ПроцессорВыводаРезультата.Вывести(ПроцессорКомпоновкиДанных).Количество();
	
КонецФункции

// Открытие внешнего отчета СКД с передачей параметров
&НаКлиенте
Процедура яя_ОткрытьВнешнийОтчетПоОбремененностиПосле(Команда)
	
	Если ПолучитьСписокНаФорме() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТипЗнч(Этотобъект.ТекущийЭлемент.ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.Увольнение") Тогда
		Возврат;
	КонецЕсли;
	
    ВнешнийОтчетОбработкаДляОткрытияСсылка = ПолучитьСсылкуНаВнешнийОтчетОбработкуПоИмениНаСервере("Отчет о наличии обременения сотрудника");    
	
	Если Не ЗначениеЗаполнено(ВнешнийОтчетОбработкаДляОткрытияСсылка) Тогда
		Сообщить("Не найдена внешняя обработка отчета ""Отчет о наличии обременения сотрудника""");
		Возврат;
	КонецЕсли;
	
    ИмяОбработкиСлужебное = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(ВнешнийОтчетОбработкаДляОткрытияСсылка);
    
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("КлючВарианта","Основной");
    ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
		СсылкаНаКадровыйДокумент = Этотобъект.ТекущийЭлемент.ТекущиеДанные.Ссылка;
		
    Форма = ПолучитьФорму("ВнешнийОтчет." + ИмяОбработкиСлужебное + ".Форма");
    ПользовательскиеНастройки = ПолучитьПользовательскиеНастройки(Форма.Отчет.КомпоновщикНастроек, СсылкаНаКадровыйДокумент);
    ПараметрыФормы.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
    
    ОткрытьФорму("ВнешнийОтчет." + ИмяОбработкиСлужебное + ".Форма",ПараметрыФормы, ЭтаФорма);
    
КонецПроцедуры

&НаСервере
Функция ПолучитьПользовательскиеНастройки(КомпоновщикНастроек, СсылкаНаКадровыйДокумент)
	
    Настройки=КомпоновщикНастроек.ПолучитьНастройки();
    Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период", СсылкаНаКадровыйДокумент.ДатаУвольнения);
    Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ФизическоеЛицо", СсылкаНаКадровыйДокумент.Сотрудник.ФизическоеЛицо);
	
    КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
    Возврат КомпоновщикНастроек.ПользовательскиеНастройки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаВнешнийОтчетОбработкуПоИмениНаСервере(ИмяОтчетаОбработки)
    Возврат Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(ИмяОтчетаОбработки).Ссылка;
КонецФункции

&НаКлиенте
Процедура яя_СписокПриАктивизацииСтрокиПосле(Элемент)
	
	Если Не ТипЗнч(Элемент.ТекущаяСтрока) = Тип("ДокументСсылка.Увольнение") Тогда
		ЭтаФорма.Элементы.ФормаГруппаОтеты.Доступность = Ложь;
	Иначе 
		ЭтаФорма.Элементы.ФормаГруппаОтеты.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры
// -- яя_Айтеко $ДОБ Н-00001236
